name: Deploy FastAPI to GCP VM

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: docker image build
      run: docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }} .

    - name: login to dockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy Docker image on GCP VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.GCP_INSTANCE_IP }}
        username: ${{ secrets.GCP_SSH_USER }}
        key: ${{ secrets.GCP_SSH_KEY }}
        port: ${{ secrets.GCP_SSH_PORT || '22' }}
        script: |
          # 기존 컨테이너 중지 및 삭제
          sudo docker stop ${{ secrets.DOCKER_IMAGE }} 2>/dev/null || true
          sudo docker rm ${{ secrets.DOCKER_IMAGE }} 2>/dev/null || true

          # 이전 이미지 삭제
          sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }} 2>/dev/null || true

          # 최신 이미지 Pull
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

          # 컨테이너 실행
          sudo docker run -d --name ${{ secrets.DOCKER_IMAGE }} -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}

          # 불필요한 이미지, 컨테이너 정리
          sudo docker system prune -f
